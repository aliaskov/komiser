apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: komiser
  name: komiser
  namespace: monitoring-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: komiser
  strategy: {}
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: arn:aws:iam::XXXXXXXXXXXX:role/komiser-aws-inspector
      creationTimestamp: null
      labels:
        app: komiser
    spec:
      containers:
      - image: mlabouardy/komiser:latest
        name: komiser
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: AWS_DEFAULT_REGION
          value: "eu-west-1"

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: komiser
  name: komiser
  namespace: monitoring-core
spec:
  ports:
  - name: "3000"
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: komiser
  type: ClusterIP

---
# export ROUTE53_EKS_FQDN=c.eks.tkwy-common.io
# envsubst '$ROUTE53_EKS_FQDN' < deployment.yaml | kubectl apply -f -

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: komiser
  namespace: monitoring-core
  annotations:
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/force-ssl-redirect: "true"
#    external-dns.alpha.kubernetes.io/hostname: "metrics-server.kube.$ROUTE53_EKS_FQDN."
#    external-dns.alpha.kubernetes.io/private: "true"
#    external-dns.alpha.kubernetes.io/public: "true"


spec:
  tls:
  - secretName: wildcard-tls
    hosts:
    - komiser.${ROUTE53_EKS_FQDN}
  rules:
  - host: "komiser.${ROUTE53_EKS_FQDN}"
    http:
      paths:
      - backend:
          serviceName: komiser
          servicePort: 3000
